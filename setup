#!/bin/bash

# Version and Licence text
VERSION="Python Desktop Development Envirnoment Setup 0.1"
LICENSE=$(cat <<EOF
Copyright (C) 2015 Jon Schiefelbein
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

The views and conclusions contained in the software and documentation are those
of the authors and should not be interpreted as representing official policies,
either expressed or implied, of any organization or government.
EOF
)

# The help text
# This should follow the docopts format found at:
# http://docopt.org
HELP=$(cat <<EOF
setup.

Usage:
    sudo ./setup -b | --verbose
    sudo ./setup -s | --cowsay
    sudo ./setup -i | --inventory
    sudo ./setup -c | --clean
    sudo ./setup -r | --remove
    sudo ./setup -u | --username <system username>
    sudo ./setup (-b | -s | -u <system username> | -i <inventory file>)
    sudo ./setup -h | --help
    setup --version

Options:
    -h --help      Show this screen
    -v --version   Show version and licence information.
    -s --cowsay    
    -u --username  Username on the system to use for installation & permissions.
                   Defaults to the user from whoami or SUDOUSER.
    -i --inventory The location of the ansible inventory file.
                   Defaults to ./hosts.
    -e --editor    Editor to use when commiting from the command line

Report bugs to:  lowcloudnine@hotmail.com
Git Initiailization Setup home page:  https://github.com/lowcloudnine/runcons

EOF
)

# #############################################################################
# FUNCTIONS: must come first
# #############################################################################

# a function for clean the directories in a development situation
clean() {
    rm -rf ./runcons
    rm -rf /opt/pytools
    rm -rf ./tasks/Miniconda3-*
    echo "Development clean completed!"
}

# a function for cleaning up after the script has successfully run
final_clean() {
    rm -rf ./runcons
    rm -rf ./tasks/Miniconda3-*
    echo "Development Environment Setup Complete!"
    echo
}

# a function for removing the development environment
remove() {
    ansible-playbook -i ./hosts -u ${THE_USER} ./remove.yml
    apt-get remove ansible
    echo "Removed the development environment!"
}

# #############################################################################
# SCRIPT: the part that runs
# #############################################################################

# ######################################
# Parse command line args
# ######################################

# stolen from:
# http://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash

# -------------------------------------
# Parse keys and values if required
# -------------------------------------

while [[ $# > 0 ]]
do
    case $1 in
        -v|--version)
            echo "$VERSION"
            echo "$LICENSE"
            exit
            ;;
        -b|--verbose)
            VERBOSE="true"
            ;;
        -r|--remove)
            DO_REMOVE=true
            ;;
        -c|--clean)
            DO_CLEAN=true
            ;;
        -s|--cowsay)
            COWSAY=true
            ;;
        -u|--user|--username)
            THE_USER="$2"
            shift
            ;;
        -i|--inventory)
            INVENTORY="$2"
            shift
            ;;
        -h|--help|*)
            # help and unknown option
            echo "$HELP"
            exit
            ;;
    esac
    shift # past argument or value
done

# -------------------------------------
# From the input keys assign variables
# -------------------------------------

if [ -z "$VERBOSE" ];
then
    VERBOSE=false
fi

if [ -z "$COWSAY" ];
then
    COWSAY=false
fi

if [ -z "$DO_CLEAN" ];
then
    DO_CLEAN=false
fi

if [ -z "$DO_REMOVE" ];
then
    DO_REMOVE=false
fi

if [ -z "$INVENTORY" ];
then
    INVENTORY="./hosts"
fi

if [ -z "${THE_USER}" ];
then
    if [ -z "${SUDO_USER}" ];
    then
        THE_USER=$(whoami)
    else
        THE_USER="${SUDO_USER}"
    fi
fi

# -------------------------------------
# Some output for bug hunts
#echo NEED_HELP --- "${NEED_HELP}"
#echo DO_CLEAN ---- "${DO_CLEAN}"
#echo DO_REMOVE --- "${DO_REMOVE}"
#echo COWSAY ------ "${COWSAY}"
#echo VERBOSE ----- "${VERBOSE}"
#echo INVENTORY --- "${INVENTORY}"
#echo USER -------- "${THE_USER}"
# -------------------------------------

# #####################################
# From the input args determine what to run
# #####################################

# for development and testing, clean up for another test
if $DO_CLEAN;
then
    clean
    exit $?
fi

# remove all evidence this program was run, essential uninstall
# ---- futureware
if $DO_REMOVE;
then
    remove
    exit $?
fi

# use apt to install ansible if it's not installed
if ! which ansible-playbook > /dev/null;
then
    sudo apt-get install ansible
fi

# based on options in parse enable cowsay
if $COWSAY;
then
    if ! which cowsay > /dev/null;
    then
        sudo apt-get install cowsay
    fi
    export ANSIBLE_NOCOWS=0
else
    export ANSIBLE_NOCOWS=1
fi

if $VERBOSE;
then
    # Silent for a known working "production" setting
    ansible-playbook -i ${INVENTORY} -vvvv -u ${USER} ./site.yml
else
    # Verbose for development and lots of output
    ansible-playbook -i ${INVENTORY} -u ${USER} ./site.yml
fi

final_clean
